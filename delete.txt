<%@ include file="jspf/preHeaderArea.jspf"%>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<link href="/RequestDocument/resources/css/bootstrap.css${asset_id}" rel="stylesheet">
<link href="/RequestDocument/resources/js/bootstrap.js" rel="stylesheet">
<link href="/RequestDocument/resources/css/features.css${asset_id}" rel="stylesheet">
<script  type="text/javascript" src="/RequestDocument/resources/js/requestdocument.js${asset_id}"></script>

    <title>Request Document</title>
         
        <form:form enctype="multipart/form-data" action="/RequestDocument/review"  modelAttribute="RequestDocumentForm" method="post" > 
         <div class="container">
         
            <div class="errorMsg">
                <form:errors path="*"/>
            </div>
            
            <div class="form-group">
                <form:label path="toAddresses">To</form:label>
                <form:input path="toAddresses" cssClass="form-control" placeholder="Email Address of customer"/>
             </div>             
             <div class="form-group">
                <form:label path="ccAddresses">Cc</form:label>
                 <form:input path="ccAddresses" cssClass="form-control" placeholder="Email Address of employee"/>
             </div>
             <div class="form-group">
                 <form:label path="uploadNotificationAddresses">Send Upload Notification To</form:label>
                 <form:input id ="uploadNotificationAddresses" cssClass="form-control" path= "uploadNotificationAddresses" 
                 placeholder="Email that will be notified after customer upload documents"/>
             </div>             
              <div class="form-group">
              <form:label path="linkValidityInDays">Upload Link is valid for</form:label>
                <form:select id="linkValidityInDays" cssClass="form-control" path="linkValidityInDays">
                        <form:option value="" label="Select Month">Select Days</form:option>
                        <form:option value="30">30 days</form:option>
                        <form:option value="60">60 days</form:option>
                        <form:option value="90">90 days</form:option>                        
                </form:select>
              </div>
             <div class="form-group">
                  <form:label path="subject">Subject</form:label>
                  <form:textarea path="subject" cssClass="form-control" id="subject" rows="1" placeholder="Enter Subject"></form:textarea>
             </div>
             <div class="form-group">
                  <form:label path="files" id="fileLabel">Attach Template in Email</form:label>
                  <form:input type="file" multiple="multiple" path="files" id="fileBrowser"/>
                  <button onclick="event.preventDefault(); deleteFile($('#fileBrowser'));" id="deleteButton">Delete file</button>
                  <div id="filesSelected"></div>
             </div>  
             <div class="form-group">
                  <form:label path="body">Body</form:label>
                  <form:textarea path="body" cssClass="form-control" id="body" rows="5" placeholder="Enter body"></form:textarea>
             </div>            
             <div class="form-group">
              <form:label path="department">Select Department</form:label>
                <form:select id="department" cssClass="form-control" path="department" onchange="createFolderLink()">
					<form:option value="" label="Select Department">Department</form:option>					
					<c:forEach items="${availableDepartments}" var="option" varStatus="status">
						<form:option value="${option.key}">${option.value}</form:option>				
					</c:forEach>
                </form:select>
              </div>
            <div class="form-group">
                 <form:label path="folders[0]">Folder 1</form:label>
                 <form:input path="folders[0]" id ="folder1" cssClass="form-control" oninput="createFolderLink()"/>
             </div>
             <div class="form-group">
                 <form:label path="folders[1]">Folder 2</form:label>
                 <form:input path="folders[1]" id ="folder2" cssClass="form-control" oninput="createFolderLink()"/>
             </div>
             <div class="form-group">
                 <form:label path="folders[2]">Folder 3</form:label>
                 <form:input path="folders[2]" id ="folder3" cssClass="form-control" oninput="createFolderLink()"/>
             </div>
             <div class="form-group">
                 <form:label path="folders[3]">Folder 4</form:label>
                 <form:input path="folders[3]" id ="folder4" cssClass="form-control" oninput="createFolderLink()"/>
             </div>
             <div class="form-group">
                <form:label path="folderLocation">Folder Location</form:label>
                <input name="folderLocation" id="reviewFolderLocation" readonly/>
             </div>
              <button class="btn btn-primary" type="submit">Review</button>
              <br>
        </div>
 
 </form:form>
 
 
 
 
 
 function createFolderLink() {
    var sel = document.getElementById("department");
    document.getElementById("reviewFolderLocation").value = "" + 
    sel.options[sel.selectedIndex].value +  "\\" +
    document.getElementById("folder1").value +  "\\" +
    document.getElementById("folder2").value +  "\\" +
    document.getElementById("folder3").value +  "\\" +
    document.getElementById("folder4").value;
}


var formParams = new FormData();
var filesToUpload = [];

$(document).ready(function () {
	
	associateEvents();

	window.deleteFile = function (e) {
	    e.wrap('<form>').closest('form').get(0).reset();
	    e.unwrap();
	}
});

function associateEvents(){
	$(".docUploadForm").on('submit',function (event) {
		 event.preventDefault();		
		 
		for (var i = 0; i < filesToUpload.length; i++) {    
   		formParams.append("files", filesToUpload[i]);
 		}
	
	});
	
$("#fileBrowser").on('click',function (event) {
	$(this).val(null);
});

$("#fileBrowser").on('change',function (event) {
	var files = $(this)[0].files;
	
	for (var i = 0; i < files.length; i++) {   
		filesToUpload.push(files[i]); 
		}
	
		
		updateFilesSelected();
});

}

function updateFilesSelected() {

		if (filesToUpload != null) {

		var filesSelectedHtml = "<p></p><p class='filesSelected'><b>Files selected:</b></p><ul>";
		
		for (var i = 0; i < filesToUpload.length; i++) {   
			filesSelectedHtml = filesSelectedHtml + "<li class='fileName'>" + "<span>" + formatFileName(filesToUpload[i].name) + "</span>"  + "  "  + "<span>"  +
			formatBytes(filesToUpload[i].size)  + "</span>"  + "<span class='remove'>Remove file</span></li>"; 
			}
	
		var filesSelectedHtml = filesSelectedHtml + "</ul>";
	
		$("#filesSelected").html(filesSelectedHtml);
		bindRemoveEvent();
		
	} else {
		$("#filesSelected").html('');
	} 
}

function formatFileName(fileName) {
	var nameSuffix = '....';
	var numberOfCharactersFromFileNameToBeDisplayed = 15;
	
	var expectedNameLength = numberOfCharactersFromFileNameToBeDisplayed + nameSuffix.length;  
	
	if (fileName.length <= numberOfCharactersFromFileNameToBeDisplayed) {
		return fileName;
	}
	
	return fileName.substr(0, numberOfCharactersFromFileNameToBeDisplayed) + nameSuffix;
}

function bindRemoveEvent() {
	$("li.fileName > span.remove").bind('click',function (event) {
		
		var fileIndexToRemove = $(this).parent().index();
		filesToUpload.splice(fileIndexToRemove, 1);
		updateFilesSelected();		
	});
}

function formatBytes(a, b) {
	if (0 == a) {
		return "0 Bytes";
	}
		
	var c = 1024;
	var d = b || 2;
	var e = ["Bytes", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"];
	var f = Math.floor(Math.log(a) / Math.log(c));
	
	return Math.ceil(parseFloat((a / Math.pow(c, f)).toFixed(d))) + " " + e[f];
}
 
























<%@ include file="jspf/preHeaderArea.jspf"%>
<%@page contentType="text/html" import="java.util.*" %>
<% pageContext.setAttribute("newLineChar", "\r\n"); %>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<link href="/RequestDocument/resources/css/bootstrap.css${asset_id}" rel="stylesheet">
<link href="/RequestDocument/resources/js/bootstrap.js" rel="stylesheet">
<link href="/RequestDocument/resources/css/features.css${asset_id}" rel="stylesheet">

<title>Admin Web Page</title>

<div class="container">
   <form:form enctype="multipart/form-data" action="/RequestDocument/confirm"  modelAttribute="RequestDocumentForm" method="post">
      <br><br>
      <p><strong>Review</strong></p>
      <br>      
      <table class="table table-striped" style="font-size: 90%;">
         <tr>
            <th scope="row">To</th>
            <td>${RequestDocumentForm.toAddresses}</td>
            <form:input path="toAddresses" type='hidden' id='toAddresses' name='toAddresses' value='${RequestDocumentForm.toAddresses}'/>
         </tr>
         <tr>
            <th scope="row">Cc</th>
            <td>${RequestDocumentForm.ccAddresses}</td>
         </tr>
         <tr>
            <th scope="row">Send Upload Notification To</th>
            <td>${RequestDocumentForm.uploadNotificationAddresses}</td>
         </tr>
         <tr>
            <th scope="row">Folder Location</th>
            <td>${RequestDocumentForm.folderLocation}</td>
         </tr>
         <tr>         
            <th scope="row">Attached template in Email</th>
             <td>
                <c:forEach var="eachFile" items="${RequestDocumentForm.files}">
                <c:set var="eachFiles" value="${eachFile.originalFilename}"/>
                    <li>${eachFiles}</li>                    
                 </c:forEach>
                 <%-- <form:input path="files" type='hidden' value='${RequestDocumentForm.files}' multiple/> --%>
            </td> 
         </tr>
         <tr>
            <th scope="row">Subject</th>
            <td>
               <p>${RequestDocumentForm.subject}</p>
            </td>
         </tr>
         <tr>
            <th scope="row"></th>
            <td> <p><img src="https://dev.rbfcu.org/images/default-source/nbo/others/rbfcu-logo.png"></p>             
               ${fn:replace(RequestDocumentForm.body, newLineChar, '<br>')}
               <br><br>Please <a>click here</a> to upload documents.
               <br><br><p><font color='red'><strong>Note: </strong> Please Do not provide the password protected documents and do not worry this is very secure.</font></p>
            </td>
            <form:input path="ccAddresses" type='hidden' value='${RequestDocumentForm.ccAddresses}'/>
            <form:input path="uploadNotificationAddresses" type='hidden' value='${RequestDocumentForm.uploadNotificationAddresses}'/>
            <form:input path="linkValidityInDays" type='hidden' value='${RequestDocumentForm.linkValidityInDays}'/>
            <form:input path="subject" type='hidden' value='${RequestDocumentForm.subject}'/>
            <form:input path="body" type='hidden' value='${RequestDocumentForm.body}'/>
            <form:input path="folderLocation" type='hidden' value='${RequestDocumentForm.folderLocation}'/>
            <form:input path="department" type='hidden' value="${RequestDocumentForm.department}"/>
            <form:input path="folders[0]" type='hidden' value="${RequestDocumentForm.folders[0]}"/>
            <form:input path="folders[1]" type='hidden' value="${RequestDocumentForm.folders[1]}"/>
            <form:input path="folders[2]" type='hidden' value="${RequestDocumentForm.folders[2]}"/>
            <form:input path="folders[3]" type='hidden' value="${RequestDocumentForm.folders[3]}"/>
         </tr>
      </table>
      <button class="btn btn-primary" onclick="event.preventDefault(); window.history.back();">Previous</button>
      <button class="btn btn-primary" type="submit">Send</button>
   </form:form>
</div>














<%@ include file="jspf/preHeaderArea.jspf"%>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<link href="/RequestDocument/resources/css/bootstrap.css${asset_id}" rel="stylesheet">
<link href="/RequestDocument/resources/js/bootstrap.js" rel="stylesheet">
<link href="/RequestDocument/resources/css/features.css${asset_id}" rel="stylesheet">
<script  type="text/javascript" src="/RequestDocument/resources/js/requestdocument.js${asset_id}"></script>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>

    <title>Request Document</title>
         
        <form:form enctype="multipart/form-data" action="/RequestDocument/review"  modelAttribute="RequestDocumentForm" method="post" > 
         <div class="container">
         
            <div class="errorMsg">
                <form:errors path="*"/>
            </div>

            <div class="row" style={background-color:gray;}>
            <div class="form-group">
                <form:label path="toAddresses">To</form:label>
                <form:input path="toAddresses" cssClass="form-control" placeholder="Email Address of customer"/>
             </div>             
             <div class="form-group">
                <form:label path="ccAddresses">Cc</form:label>
                 <form:input path="ccAddresses" cssClass="form-control" placeholder="Email Address of employee"/>
             </div>
             </div>
             
             <div class="form-group">
                 <form:label path="uploadNotificationAddresses">Send Upload Notification To</form:label>
                 <form:input id ="uploadNotificationAddresses" cssClass="form-control" path= "uploadNotificationAddresses" 
                 placeholder="Email that will be notified after customer upload documents"/>
             </div>             
              <div class="form-group">
              <form:label path="linkValidityInDays">Upload Link is valid for</form:label>
                <form:select id="linkValidityInDays" cssClass="form-control" path="linkValidityInDays">
                        <form:option value="" label="Select Month">Select Days</form:option>
                        <form:option value="30">30 days</form:option>
                        <form:option value="60">60 days</form:option>
                        <form:option value="90">90 days</form:option>                        
                </form:select>
              </div>
             <div class="form-group">
                  <form:label path="subject">Subject</form:label>
                  <form:textarea path="subject" cssClass="form-control" id="subject" rows="1" placeholder="Enter Subject"></form:textarea>
             </div>
             <div class="form-group">
                  <form:label path="files" id="fileLabel">Attach Template in Email</form:label>
                  <form:input type="file" multiple="multiple" path="files" id="fileBrowser"/>
                  <button onclick="event.preventDefault(); deleteFile($('#fileBrowser'));" id="deleteButton">Delete file</button>
                  <div id="filesSelected"></div>
             </div>  
             <div class="form-group">
                  <form:label path="body">Body</form:label>
                  <form:textarea path="body" cssClass="form-control" id="body" rows="5" placeholder="Enter body"></form:textarea>
             </div>            
             <div class="form-group">
              <form:label path="department">Select Department</form:label>
                <form:select id="department" cssClass="form-control" path="department" onchange="createFolderLink()">
					<form:option value="" label="Select Department">Department</form:option>					
					<c:forEach items="${availableDepartments}" var="option" varStatus="status">
						<form:option value="${option.key}">${option.value}</form:option>				
					</c:forEach>
                </form:select>
              </div>
            <div class="form-group">
                 <form:label path="folders[0]">Folder 1</form:label>
                 <form:input path="folders[0]" id ="folder1" cssClass="form-control" oninput="createFolderLink()"/>
             </div>
             <div class="form-group">
                 <form:label path="folders[1]">Folder 2</form:label>
                 <form:input path="folders[1]" id ="folder2" cssClass="form-control" oninput="createFolderLink()"/>
             </div>
             <div class="form-group">
                 <form:label path="folders[2]">Folder 3</form:label>
                 <form:input path="folders[2]" id ="folder3" cssClass="form-control" oninput="createFolderLink()"/>
             </div>
             <div class="form-group">
                 <form:label path="folders[3]">Folder 4</form:label>
                 <form:input path="folders[3]" id ="folder4" cssClass="form-control" oninput="createFolderLink()"/>
             </div>
             <div class="form-group">
                <form:label path="folderLocation">Folder Location</form:label>
                <input name="folderLocation" id="reviewFolderLocation" readonly/>
             </div>
              <button class="btn btn-primary" type="submit">Review</button>
              <br>
        </div>
 
 </form:form>
 














package org.rbfcu.documentupload.admin.controller;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.collections.KeyValue;
import org.apache.commons.collections.keyvalue.DefaultKeyValue;
import org.rbfcu.documentupload.admin.dto.RequestDocumentForm;
import org.rbfcu.documentupload.admin.security.Authorization;
import org.rbfcu.documentupload.admin.security.AuthorizedUser;
import org.rbfcu.documentupload.admin.service.RequestDocumentService;
import org.rbfcu.documentupload.admin.validator.RequestDocumentValidator;
import org.rbfcu.documentupload.admin.web.UserSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.SessionAttributes;
import org.springframework.web.servlet.ModelAndView;

@Controller
@SessionAttributes("RequestDocumentForm")
@RequestMapping("/")
public class LandingController {

	@Autowired
	private RequestDocumentValidator requestValidator;

	@InitBinder
	protected void initBinder(WebDataBinder binder) {
		binder.setValidator(requestValidator);
	}

	@RequestMapping(method = RequestMethod.GET)
	public ModelAndView landingPage(HttpServletRequest request) throws Exception {
		ModelAndView model = new ModelAndView("LandingPage");
		RequestDocumentForm requestDocumentForm = new RequestDocumentForm();
		requestDocumentForm.resetFiles();
		requestDocumentForm.setCcAddresses(getDefaultLoginAddress(request));
		requestDocumentForm.setUploadNotificationAddresses(getDefaultLoginAddress(request));
		model.addObject("RequestDocumentForm", requestDocumentForm);
		model.addObject("availableDepartments", getAvailableDepartments(request));
		return model;
	}

	@RequestMapping(value = { "/review" }, method = RequestMethod.POST, consumes = { MediaType.MULTIPART_FORM_DATA_VALUE })
	public String review(@ModelAttribute("RequestDocumentForm") @Validated RequestDocumentForm adminForms, BindingResult result, Model model,
			HttpServletRequest request) {
		new RequestDocumentService().getAttachedFiles(adminForms);
		if (result.hasErrors()) {
			return "LandingPage";
		}
		return "Confirmation";
	}

	@RequestMapping(value = { "/confirm" }, method = RequestMethod.POST, consumes = { MediaType.MULTIPART_FORM_DATA_VALUE })
	public String confirm(@ModelAttribute("RequestDocumentForm") RequestDocumentForm adminForms, BindingResult result, Model model,
			HttpServletRequest request) throws Exception {
		return new RequestDocumentService().sendRequestEmail(adminForms);
	}

	private List<KeyValue> getAvailableDepartments(HttpServletRequest request) {
		AuthorizedUser user = new UserSession(request).getAuthorizedUser();
		List<KeyValue> availableDepartments = new ArrayList<KeyValue>();

		for (Authorization authorization : user.getAuthorizations()) {
			availableDepartments.add(new DefaultKeyValue(authorization.getRootFolder(), authorization.getName()));
		}

		return availableDepartments;
	}

	private String getDefaultLoginAddress(HttpServletRequest request) {
		return new UserSession(request).getAuthorizedUser().getEmail();
	}
}



